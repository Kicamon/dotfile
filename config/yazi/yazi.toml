# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[manager]
ratio          = [ 2, 3, 4 ]
sort_by        = "alphabetical"
sort_sensitive = false
sort_reverse    = false
sort_dir_first = true
sort_translit  = false
linemode       = "none"
show_hidden    = false
show_symlink   = true
scrolloff      = 5
mouse_events   = [ "click", "scroll" ]

[preview]
# tab_size        = 2
# max_width       = 600
# max_height      = 900
# cache_dir       = ""
# image_filter    = "triangle"
# image_quality   = 75
# sixel_fraction  = 15
# ueberzug_scale  = 1
# ueberzug_offset = [ 0, 0, 0, 0 ]


[opener]
edit = [
  { run = '${EDITOR:=nvim} "$@"', desc = "$EDITOR", block = true, for = "unix" },
  { run = 'code "%*"',    orphan = true, desc = "code",         for = "windows" },
  { run = 'code -w "%*"', block = true,  desc = "code (block)", for = "windows" },
]
open = [
  { run = 'xdg-open "$@"',                desc = "Open", for = "linux" },
  { run = 'open "$@"',                    desc = "Open", for = "macos" },
  { run = 'start "" "%1"', orphan = true, desc = "Open", for = "windows" },
]
reveal = [
  { run = 'xdg-open "$(dirname "$0")"',            desc = "Reveal", for = "linux" },
  { run = 'open -R "$1"',                          desc = "Reveal", for = "macos" },
  { run = 'explorer /select, "%1"', orphan = true, desc = "Reveal", for = "windows" },
  { run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]
extract = [
  { run = 'unar "$1"', orphan = true, desc = "Extract here", for = "unix" },
]
play = [
  { run = 'mpv --force-window "$@"', orphan = true, for = "unix" },
  { run = 'mpv --force-window "%1"', orphan = true, for = "windows" },
  { run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]
image = [
  { run = 'ristretto "$@"',  desc = "ImageOpen", for = "linux" },
]
pdf = [
  { run = 'sioyek "$@"',  desc = "PdfRead", for = "linux" },
]

[open]
rules = [
  { name = "*/", use = [ "edit", "open", "reveal" ] },

  { mime = "text/*",          use = [ "edit", "reveal" ] },
  { mime = "image/*",         use = [ "image", "reveal" ] },
  { mime = "{audio,video}/*", use = [ "play", "reveal" ] },
  { mime = "inode/x-empty",   use = [ "edit", "reveal" ] },

  { mime = "application/zip",             use = ["extract"] },
  { mime = "application/rar",             use = ["extract"] },
  { mime = "application/tar.xz",          use = ["extract"] },
  { mime = "application/gzip",            use = ["extract"] },
  { mime = "application/x-bzip",          use = ["extract"] },
  { mime = "application/x-bzip2",         use = ["extract"] },
  { mime = "application/x-tar",           use = ["extract"] },
  { mime = "application/x-7z-compressed", use = ["extract"] },
  { mime = "application/x-rar",           use = ["extract"] },

  { mime = "application/json", use = [ "edit", "reveal" ] },
  { mime = "*/javascript",     use = [ "edit", "reveal" ] },

  { mime = "application/pdf",  use = [ "pdf" ] },

  { name = "*", use = [ "open", "reveal" ] },
]

[plugin]

fetchers = [
  { id = "git", name = "*", run = "git",if = "!mime", prio = "normal" },
  { id = "git", name = "*/", run = "git",if = "mime", prio = "normal" },
  { id = "mime-ext", name = "*", run = "mime-ext",if = "!mime", prio = "high" },
]
