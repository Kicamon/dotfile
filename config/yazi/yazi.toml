# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[mgr]
ratio          = [ 2, 3, 4 ]
sort_by        = "alphabetical"
sort_sensitive = false
sort_reverse    = false
sort_dir_first = true
sort_translit  = false
linemode       = "none"
show_hidden    = false
show_symlink   = true
scrolloff      = 5
mouse_events   = [ "click", "scroll" ]

[preview]
tab_size        = 2
max_width       = 600
max_height      = 900
cache_dir       = ""
image_filter    = "triangle"
image_quality   = 75
sixel_fraction  = 15
ueberzug_scale  = 1
ueberzug_offset = [ 0, 0, 0, 0 ]

[tasks]
image_bound =[ 10000, 10000 ]

[opener]
edit = [
  { run = '${EDITOR:=nvim} "$@"', desc = "$EDITOR", block = true, for = "unix" },
]
open = [
  { run = 'xdg-open "$@"',                desc = "Open", for = "linux" },
  { run = 'open "$@"',                    desc = "Open", for = "macos" },
  { run = 'start "" "%1"', orphan = true, desc = "Open", for = "windows" },
]
reveal = [
  { run = 'xdg-open "$(dirname "$0")"',            desc = "Reveal", for = "linux" },
  { run = 'open -R "$1"',                          desc = "Reveal", for = "macos" },
  { run = 'explorer /select, "%1"', orphan = true, desc = "Reveal", for = "windows" },
  { run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]
extract = [
  { run = 'unar "$1"', orphan = true, desc = "Extract here", for = "unix" },
]
videos = [
  { run = 'mpv --geometry=1280x700 "$@"', orphan = true, for = "unix" },
  { run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]
audios = [
  { run = 'mocp "$@"', orphan = true, for = "unix" }
]
image = [
  { run = 'ristretto "$@"',  desc = "ImageOpen", for = "linux" },
]

[open]
rules = [
  { name = "*/", use = [ "edit", "open", "reveal" ] },

  { mime = "text/*",          use = [ "edit", "reveal" ] },
  { mime = "image/*",         use = [ "image", "reveal" ] },
  { mime = "video/*",         use = [ "play", "reveal" ] },
  { mime = "audio/*",         use = [ "play", "reveal" ] },

  { mime = "application/zip",             use = ["extract"] },
  { mime = "application/7z",              use = ["extract"] },
  { mime = "application/rar",             use = ["extract"] },
  { mime = "application/tar.xz",          use = ["extract"] },
  { mime = "application/gzip",            use = ["extract"] },
  { mime = "application/x-bzip",          use = ["extract"] },
  { mime = "application/x-bzip2",         use = ["extract"] },
  { mime = "application/x-tar",           use = ["extract"] },
  { mime = "application/x-7z-compressed", use = ["extract"] },
  { mime = "application/x-rar",           use = ["extract"] },


  # code
  { name = "*.c",     use = "edit" },
  { name = "*.cc",    use = "edit" },
  { name = "*.cpp",   use = "edit" },
  { name = "*.lua",   use = "edit" },
  { name = "*.dart",  use = "edit" },
  { name = "*.go",    use = "edit" },
  { name = "*.py",    use = "edit" },
  { name = "*.sh",    use = "edit" },
  { name = "*.zsh",   use = "edit" },
  { name = "*.js",    use = "edit" },
  { name = "*.ts",    use = "edit" },
  { name = "*.css",   use = "edit" },
  { name = "*.html",  use = "edit" },
  { name = "*.json",  use = "edit" },

  { name = "*", use = [ "open", "reveal" ] },
]
