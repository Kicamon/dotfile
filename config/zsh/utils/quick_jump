#!/bin/bash

FILE_PATH="$HOME/.local/state/zsh_jump_list"

declare -A jump

update_jump_lilst() {
	if [[ -n "$1" && -n "$2" ]]; then
		jump["$1"]="$2"
	fi
	rm "$FILE_PATH"
	for key in ${!jump[@]}; do
		val=${jump[$key]}
		echo "${key} ${val}" >>"$FILE_PATH"
	done
}

read_jump_list() {
	if [[ ! -f "$FILE_PATH" ]]; then
		touch "$FILE_PATH"
		return
	fi

	local flag=false

	while IFS=' ' read -r keyword dir; do
		if [[ -d "$dir" ]]; then
			flag=true
			jump["$keyword"]="$dir"
		fi
	done <"$FILE_PATH"

	if ${flag}; then
		update_jump_lilst
	fi
}

add_jump_list() {
	local keyword="$1"
	local dir="$2"

	echo "$keyword $dir" >>"$FILE_PATH"
}

read_jump_list

opt="$1"

case "$opt" in
"")
	echo "~"
	;;
"-l")
	for keyword in "${!jump[@]}"; do
		echo "$keyword"
	done
	;;
"-a")
	dir=$(pwd)
	if [[ -n $2 ]]; then
		keyword="$2"
	else
		keyword=$(basename "$dir")
	fi
	if [[ -n "${jump[$keyword]}" ]]; then
		cover=n
		read -p " ::${keyword}已存在，是否覆盖？[y/N]" cover
		if [[ "$cover" == "y" ]]; then
			update_jump_lilst $keyword $dir
		fi
	else
		add_jump_list "$keyword" "$dir"
	fi
	;;
*)
	if [[ -n "${jump[$opt]}" ]]; then
		echo "${jump[$opt]}"
	else
		echo "$opt"
	fi
	;;
esac
